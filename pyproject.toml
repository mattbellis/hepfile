[build-system]
requires = ['setuptools>=42']
build-backend = "setuptools.build_meta"

[project]
name = "hepfile"
authors = [{name = "Matt Bellis", email = "mbellis@siena.edu"}]
readme = "README.md"
license = {file = "LICENSE"}
dynamic = ["version"] #, "description"]

requires-python = ">=3.9"

classifiers = [
  "License :: OSI Approved :: BSD License",
  "Topic :: Scientific/Engineering",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Development Status :: 1 - Planning"
]

dependencies = [
  "numpy>=1.13.3",
  "h5py"
  ]

[project.urls]
Documentation = "https://hepfile.github.io"
Home = "https://github.com/mattbellis/hepfile"

[project.optional-dependencies]
pandas = ["pandas"]
awkward = ["awkward>2"]
learn = [
      "hepfile[pandas,awkward]",
      "astropy"
      ]
all = ["hepfile[pandas,awkward]"]

# for developers
dev = [
    "hepfile[all]",
    "pre-commit",
    "jupyter",
    "mistune",
    "pytest",
    "ruff"
    ]

docs = [
  "hepfile[all]",
  "Sphinx>=3.0.0",
  "myst_parser>=0.13",
  "nbsphinx>=0.9.1",
  "sphinx-book-theme>=0.0.33",
  "sphinx_copybutton",
  "autodoc",
  "ipykernel"
]

[tool.setuptools.dynamic]
version = {attr = 'hepfile._version.__version__'}

[tool.pytest.ini_options]
addopts = "-ra -Wd"
testpaths = ["tests"]

[tool.mypy]
files = "src"
python_version = "3.9"
warn_unused_configs = true

disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_reexport = true
strict_equality = true

[tool.ruff]
# Enable the pycodestyle (`E`) and Pyflakes (`F`) rules by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E", "F"]
ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    ".github",
    ".ipynb_checkpoints",
    "docs",
    "tests",
    "paper",
    "sandbox",
    ".binder",
]

# set to the same as black
line-length = 88

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py310"

# Ignore `E402` (import violations) in all `__init__.py` files, and in `path/to/file.py`.
[tool.ruff.per-file-ignores]
"src/hepfile/__init__.py" = ["E402", "F403", "F401"]
